# ---------- LOGINS

#create.user.log = Create new user:
#create.user = INSERT INTO login (login, email, password, role, time) VALUES (?,?,?,?,?)
#create.user.dbe = Cannot insert user:
#
#select.login = Login user:
#select.login.byLogin = SELECT * FROM login WHERE login=?
#select.login.byLogin.success = User logged successfully, user:
#select.login.byLogin.dbe = Wrong login for user:
#select.login.byLogin.dbe.pass = Wrong password for user:
#select.login.byLogin.dbe.exist = User with same login exists!

# ---------- CATEGORIES

select.all.categories.log = Get categories list
#select.all.categories = SELECT * FROM categories
#select.all.categories.dbe = Cannot find all categories
#select.all.categories.empty = Categories list is empty

# ---------- DISHES

select.all.dishes.page.log = Get page of dishes #
select.all.dishes.log = Get all dishes
#select.all.dishes = SELECT * FROM dishes d LEFT JOIN categories c ON d.category_id = c.id
#select.all.dishes.pageable = SELECT (select count(*) from dishes),* FROM (SELECT row_number() OVER (ORDER BY %1$s %2$s) AS row,* FROM dishes d LEFT JOIN categories c ON d.category_id = c.id ORDER BY %1$s %2$s) AS temp WHERE temp.row BETWEEN ? AND ?
#select.all.dishes.pageable.filter = SELECT (select count(*) from dishes WHERE category_id=?),* FROM (SELECT row_number() OVER (ORDER BY %1$s %2$s) AS row,* FROM dishes d LEFT JOIN categories c ON d.category_id = c.id WHERE c.id=? ORDER BY %1$s %2$s) AS temp WHERE temp.row BETWEEN ? AND ?
#select.all.dishes.dbe = Cannot find all dishes
#select.all.dishes.empty = Dishes list is empty

select.dishes.log = Select dish, id:
#select.dishes = SELECT * FROM dishes d LEFT JOIN categories c ON d.category_id=c.id WHERE d.id=?
select.dishes.dbe = Cannot find dish, wrong id:

create.dishes.log = Create new dish
#create.dishes = INSERT INTO dishes (name_en, name_ua, price, time, category_id) VALUES (?,?,?,?,?)
create.dishes.dbe = Cannot insert dish:

update.dishes.log = Update dish:
#update.dishes = UPDATE dishes SET name_en=?, name_ua=?, price=? WHERE id=?
update.dishes.dbe = Cannot update dish, id:

delete.dishes.log = Delete dish, id:
#delete.dishes = DELETE FROM dishes WHERE id=?
delete.dishes.dbe = Cannot delete dish, id:

# ---------- BASKETS

select.all.baskets.log = Get basket list for user:
#select.all.baskets = SELECT * FROM baskets b LEFT JOIN dishes d on b.dish_id = d.id LEFT JOIN categories c on c.id = d.category_id WHERE login_id=? ORDER BY b.id
#select.all.baskets.dbe = Cannot find all dishes
select.all.baskets.empty = Basket is empty

create.basket.log = Add new dish to the basket, dish id:
#create.basket = INSERT INTO baskets (dish_id, login_id) VALUES (?,?)
create.basket.dbe = Cannot insert basket item, dish id:

delete.basket.log = Delete dish from the basket, dish id:
#delete.basket = DELETE FROM baskets WHERE id IN (SELECT id FROM baskets WHERE dish_id=? AND login_id=? LIMIT 1)
delete.basket.dbe = Cannot delete basket, dish id:

delete.all.basket.log = Clear all user basket, user id:
#delete.all.basket = DELETE FROM baskets WHERE login_id=?
delete.all.basket.dbe = Cannot clear basket, user id:

# ---------- ORDERS

select.all.orders.manager.log = Get all orders for manager:
#select.all.orders.manager = SELECT * FROM orders o LEFT JOIN login l ON o.login_id = l.id ORDER BY o.id

select.all.orders.log = Get all orders for user:
#select.all.orders = SELECT * FROM orders o LEFT JOIN login l ON o.login_id = l.id WHERE o.login_id=? ORDER BY o.id
#select.all.orders.dbe = Cannot find all orders
#select.all.orders.empty = Orders list is empty

#select.orders.log = Select order for status update, id:
#select.orders = SELECT * FROM orders o LEFT JOIN login l ON o.login_id = l.id WHERE o.id=?
select.orders.dbe = Cannot find order for update, id:
#
create.order.log = Creating new order got user:
#create.order = INSERT INTO orders (status, time, total_price, login_id) VALUES (?, current_timestamp, (SELECT SUM(d.price) FROM baskets b JOIN dishes d on b.dish_id = d.id WHERE b.login_id=?), ?)
#create.order.dbe = Cannot create order
#
update.orders.log = Update status for order:
#update.orders = UPDATE orders SET status=? WHERE id=? AND status=?
#update.orders.dbe = Cannot update orders status, id:
